# Generated by Django 4.1.6 on 2023-02-09 10:51

import Elearning_platform.managers
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Course',
            fields=[
                ('course_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('course_name', models.CharField(max_length=200)),
                ('course_category', models.CharField(choices=[('Technology', 'Technology'), ('History', 'History'), ('Biology', 'Biology')], default='Technology', max_length=30)),
                ('upload_course', models.FileField(null=True, upload_to='media')),
                ('duration', models.TextField(max_length=20)),
            ],
            options={
                'verbose_name_plural': 'Course',
            },
        ),
        migrations.CreateModel(
            name='CronJob',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, null=True)),
                ('time', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('first_name', models.CharField(blank=True, default=None, max_length=150, null=True, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, default=None, max_length=150, null=True, verbose_name='last name')),
                ('image', models.ImageField(blank=True, upload_to='profile_images')),
                ('phone', models.TextField(blank=True)),
                ('bio', models.TextField(blank=True, max_length=255)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name_plural': 'user',
            },
            managers=[
                ('objects', Elearning_platform.managers.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, to=settings.AUTH_USER_MODEL)),
                ('teacher_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('speciality', models.CharField(max_length=200)),
            ],
            options={
                'verbose_name_plural': 'Teacher',
            },
            bases=('Elearning_platform.user',),
            managers=[
                ('objects', Elearning_platform.managers.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, to=settings.AUTH_USER_MODEL)),
                ('student_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('course', models.ManyToManyField(max_length=200, to='Elearning_platform.course')),
            ],
            options={
                'verbose_name_plural': 'Student',
            },
            bases=('Elearning_platform.user',),
            managers=[
                ('objects', Elearning_platform.managers.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='course',
            name='teacher_name',
            field=models.ForeignKey(max_length=200, on_delete=django.db.models.deletion.CASCADE, to='Elearning_platform.teacher'),
        ),
    ]
